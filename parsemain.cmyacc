name ParseMainFun

terminal IDENT of pos_string
terminal NUMBER of pos_int
terminal STRING of pos_intlist
terminal ALPHABET of pos
terminal AND of pos
terminal ANY of pos
terminal ARROW of pos
terminal COLON of pos
terminal EOS of pos
terminal EMPT of pos
terminal ENABLE of pos
terminal EPSILON of pos
terminal EQUAL of pos
terminal FUNCTION of pos
terminal GEQ of pos
terminal LPAREN of pos
terminal MINUS of pos
terminal NAME of pos
terminal OR of pos
terminal PLUS of pos
terminal QUESTION of pos
terminal RANGE of pos
terminal REGEXP of pos
terminal REPEAT of pos
terminal RPAREN of pos
terminal SEQ of pos
terminal SET of pos
terminal STAR of pos
terminal TILDE of pos


nonterminal Ident : string =
   ident:IDENT => ident

nonterminal Number : int =
   num:NUMBER => number

nonterminal NumPairs : numpairs =
   => nil_numpairs
   (first:Number) (last:Number) (tail:NumPairs) => cons_numpairs

nonterminal Charset : charset =
   ident:Ident => ident_charset
   num:Number => number_charset
   LPAREN RANGE (l:NumPairs) RPAREN => range_charset
   EMPT => empty_charset
   LPAREN OR (l:Charsets) RPAREN => union_charset
   LPAREN AND (l:Charsets) RPAREN => intersect_charset
   LPAREN MINUS (head:Charset) (l:Charsets) RPAREN => diff_charset
   LPAREN TILDE (l:Charsets) RPAREN => comp_charset
   ANY => any_charset

nonterminal Charsets : charsets =
   => nil_charsets
   (head:Charset) (tail:Charsets) => cons_charsets
   
nonterminal Regexp : regexp =
   ident:Ident => ident_regexp
   num:Number => number_regexp
   str:STRING => string_regexp
   ANY => any_regexp
   EPSILON => epsilon_regexp
   EMPT => empty_regexp
   LPAREN COLON (l:Regexps) RPAREN => concat_regexp
   LPAREN SEQ (l:Regexps) RPAREN => seq_regexp
   LPAREN OR (l:Regexps) RPAREN => union_regexp
   LPAREN QUESTION (r:Regexp) RPAREN => option_regexp
   LPAREN STAR (r:Regexp) RPAREN => closure_regexp
   LPAREN PLUS (r:Regexp) RPAREN => plus_regexp
   LPAREN EQUAL (n:Number) (r:Regexp) RPAREN => equal_regexp
   LPAREN GEQ (n:Number) (r:Regexp) RPAREN => geq_regexp
   LPAREN REPEAT (first:Number) (last:Number) (r:Regexp) RPAREN => repeat_regexp
   EOS => eos_regexp

nonterminal Regexps : regexps =
   => nil_regexps
   (head:Regexp) (tail:Regexps) => cons_regexps
   
nonterminal Arm : arm =
   (r:Regexp) ARROW (action:Ident) => sole_arm

nonterminal Arms : arms =
   arm:Arm => sing_arms
   (head:Arm) (tail:Arms) => cons_arms

nonterminal Directive : directive =
   NAME (ident:Ident) => name_directive
   ENABLE (ident:Ident) => enable_directive
   ALPHABET (num:Number) => alphabet_directive
   REGEXP (ident:Ident) EQUAL (r:Regexp) => regexp_directive
   SET (ident:Ident) EQUAL (s:Charset) => set_directive
   FUNCTION (ident:Ident) COLON (tp:Ident) EQUAL (arms:Arms) => function_directive

nonterminal Directives : directives =
   => nil_directives
   (head:Directive) (tail:Directives) => cons_directives

start Directives
